pipeline {
    agent {
        docker { image 'ibera/iac:v2' }
    }
    parameters {
        string(name: 'AZURE_KEYVAULT_URL')
    }

    stages {
        stage('az login') {          

            options {
                azureKeyVault(
                    credentialID: "596bada5-c154-4b86-9da4-57721c2385e1",
                    keyVaultURL: "${params.AZURE_KEYVAULT_URL}",
                    secrets: [
                        [envVariable: 'BACKEND_STORAGE_ACCOUNT_NAME', name: 'BACKEND-STORAGE-ACCOUNT-NAME', secretType: 'Secret'],
                        [envVariable: 'BACKEND_STORAGE_ACCOUNT_CONTAINER_NAME', name: 'BACKEND-STORAGE-ACCOUNT-CONTAINER-NAME', secretType: 'Secret'],
                        [envVariable: 'BACKEND_KEY', name: 'BACKEND-KEY', secretType: 'Secret'],
                        [envVariable: 'RG_NAME', name: 'RG-NAME', secretType: 'Secret'],
                        [envVariable: 'ARM_ACCESS_KEY', name: 'BACKEND-ACCESS-KEY', secretType: 'Secret']
                    ]
                )
            }
            steps {
                ansiColor('xterm') {
                    withCredentials([azureServicePrincipal(
                    credentialsId: '596bada5-c154-4b86-9da4-57721c2385e1',
                    subscriptionIdVariable: 'ARM_SUBSCRIPTION_ID',
                    clientIdVariable: 'ARM_CLIENT_ID',
                    clientSecretVariable: 'ARM_CLIENT_SECRET',
                    tenantIdVariable: 'ARM_TENANT_ID'
                )]) {
                        dir("src") {
                        sh """
                        echo "Initialising Terraform"
                        terraform init -backend-config="access_key=$ARM_ACCESS_KEY" -backend-config="storage_account_name=$BACKEND_STORAGE_ACCOUNT_NAME" -backend-config="container_name=$BACKEND_STORAGE_ACCOUNT_CONTAINER_NAME" -backend-config="key=$BACKEND_KEY" -backend-config="resource_group_name=$RG_NAME"
                        """
                        }
                    }
                }
            }
        }
    }
}